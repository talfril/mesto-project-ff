(()=>{"use strict";var e,t=document.querySelectorAll(".popup");function n(t){t.classList.add("popup_is-opened"),e=function(e){!function(e,t){"Escape"===e.key&&r(t)}(e,t)},document.addEventListener("keydown",e)}function r(t){t.classList.remove("popup_is-opened"),document.removeEventListener("keydown",e)}var o,a=document.querySelector(".popup_type_image"),c=a.querySelector(".popup__image"),i=a.querySelector(".popup__caption");function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var s="https://nomoreparties.co/v1/wff-cohort-2",l={headers:{authorization:"c1324e8c-3ffd-41bf-8d8d-d39bc9277f92","Content-Type":"application/json"}};function d(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}function p(e,t){return fetch(e,t).then(d)}function f(e){return p("".concat(s,"/cards/likes/").concat(e),{method:"PUT",headers:l.headers,body:JSON.stringify({})})}function y(e){return p("".concat(s,"/cards/likes/").concat(e),{method:"DELETE",headers:l.headers,body:JSON.stringify({})})}function m(e,t){if(t&&t.classList.contains("popup__button")){var n=e?"Сохранение...":"Сохранить";t.textContent=n}}var _={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible",errorSelector:function(e){return"[data-error-for='".concat(e,"']")}},v=function(e,t,n){var r=e.querySelector(n.errorSelector(t.id));r&&(t.classList.remove(n.inputErrorClass),r.classList.remove(n.errorClass),r.textContent="")};function h(e,t){Array.from(e.querySelectorAll(t.inputSelector)).forEach((function(n){v(e,n,t)}));var n=e.querySelector(t.submitButtonSelector);n.classList.add(t.inactiveButtonClass),n.setAttribute("disabled",!0)}function b(e,t,n){!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?(t.classList.remove(n.inactiveButtonClass),t.removeAttribute("disabled")):(t.classList.add(n.inactiveButtonClass),t.setAttribute("disabled",!0))}var S=document.querySelector(".places__list"),q=document.querySelector(".popup_type_new-card"),g=document.querySelector("#card-template").content,E=document.forms.newPlace,k=E.querySelector(".popup__input_type_card-name"),C=E.querySelector(".popup__input_type_url");function L(e,t,r,o){var u=g.querySelector(".card").cloneNode(!0),s=u.querySelector(".card__delete-button"),l=u.querySelector(".card__image"),d=u.querySelector(".card__title"),p=u.querySelector(".card__like-button"),f=u.querySelector(".likes-number"),y=e._id||"";return u.dataset.cardId=y,e.owner&&e.owner._id===o?s.style.display="block":s.style.display="none",e.likes&&e.likes.some((function(e){return e._id===o}))&&p.classList.add("card__like-button_is-active"),l.src=e.link,l.alt="Фотография с места - "+e.name,d.textContent=e.name,f.textContent=e.likes.length,s.addEventListener("click",t),p.addEventListener("click",(function(){r(y)})),l.addEventListener("click",(function(){var t,r;t=e.link,r=e.name,c.src=t,c.alt=r,i.textContent=r,n(a)})),u}function A(e){var t,n=e.target.closest(".card");(t=n.dataset.cardId,p("".concat(s,"/cards/").concat(t),{method:"DELETE",headers:l.headers})).then((function(){n.remove()})).catch((function(e){console.log("Ошибка: ".concat(e))}))}function w(e){var t=document.querySelector(".card[data-card-id='".concat(e,"']")),n=t.querySelector(".card__like-button"),r=n.classList.contains("card__like-button_is-active");(r?y:f)(e).then((function(e){n.classList.toggle("card__like-button_is-active"),t.querySelector(".likes-number").textContent=e.likes.length,t.dataset.isLiked=r?"false":"true"})).catch((function(e){console.log("Ошибка при обработке лайка/дизлайка: ".concat(e))}))}var x=document.querySelector(".popup_type_edit"),D=document.querySelector(".profile__edit-button"),O=document.querySelector(".profile__add-button"),P=document.querySelector(".profile__title"),T=document.querySelector(".profile__description"),j=document.forms.editProfile,B=j.querySelector(".popup__input_type_name"),I=j.querySelector(".popup__input_type_description");function N(){B.value=P.textContent,I.value=T.textContent;var e=new Event("input",{bubbles:!0});B.dispatchEvent(e),I.dispatchEvent(e)}D.addEventListener("click",(function(){N(),n(x)})),N();var J,M=document.querySelector(".profile__image"),H=document.querySelector(".profile__image"),U=document.querySelector(".popup_type_new-avatar"),V=document.forms.changeAvatar,z=V.querySelector(".popup__input_type_avatar_url");H.addEventListener("click",(function(){n(U)})),j.addEventListener("submit",(function(e){e.preventDefault();var t,n,o=e.submitter;m(!0,o),(t=B.value,n=I.value,p("".concat(s,"/users/me"),{method:"PATCH",headers:l.headers,body:JSON.stringify({name:t,about:n})})).then((function(){P.textContent=B.value,T.textContent=I.value,r(x),j.reset()})).catch((function(e){console.log("Ошибка: ".concat(e))})).finally((function(){m(!1,o)}))})),newPlace.addEventListener("submit",(function(e){e.preventDefault();var t,n,a=e.submitter;m(!0,a),(t=k.value,n=C.value,p("".concat(s,"/cards"),{method:"POST",headers:l.headers,body:JSON.stringify({name:t,link:n})})).then((function(e){var t=L(e,A,w,o);S.insertBefore(t,S.firstChild),E.reset(),h(E,_),r(q)})).catch((function(e){console.error("Ошибка при добавлении карточки:",e)})).finally((function(){m(!1,a)}))})),V.addEventListener("submit",(function(e){e.preventDefault();var t=e.submitter,n=z.value;m(!0,t),function(e){return p("".concat(s,"/users/me/avatar"),{method:"PATCH",headers:l.headers,body:JSON.stringify({avatar:e})})}(n).then((function(){M.style.backgroundImage="url('".concat(n,"')"),r(U),V.reset(),h(V,_)})).catch((function(e){console.error("Ошибка при сохранении аватара:",e)})).finally((function(){m(!1,t)}))})),t.forEach((function(e){e.addEventListener("click",(function(t){(t.target===t.currentTarget||t.target.classList.contains("popup__close"))&&r(e)}))})),J=q,O.addEventListener("click",(function(){n(J)})),function(e){Array.from(document.querySelectorAll(e.formSelector)).forEach((function(t){t.addEventListener("submit",(function(e){e.preventDefault()})),function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);b(n,r,t),n.forEach((function(o){o.addEventListener("input",(function(){!function(e,t,n){t.validity.patternMismatch?t.setCustomValidity(t.dataset.errorMessage):t.setCustomValidity(""),t.validity.valid?v(e,t,n):function(e,t,n,r){var o=e.querySelector(r.errorSelector(t.id));o&&(t.classList.add(r.inputErrorClass),o.textContent=n,o.classList.add(r.errorClass))}(e,t,t.validationMessage,n)}(e,o,t),b(n,r,t)}))}))}(t,e)}))}(_),Promise.all([p("".concat(s,"/users/me"),{headers:l.headers}).then((function(e){return o=e._id,{name:e.name,about:e.about,avatar:"url('".concat(e.avatar,"')"),_id:o}})),p("".concat(s,"/cards"),{headers:l.headers}).then((function(e){return Array.from(e)}))]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,c,i=[],u=!0,s=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=a.call(n)).done)&&(i.push(r.value),i.length!==t);u=!0);}catch(e){s=!0,o=e}finally{try{if(!u&&null!=n.return&&(c=n.return(),Object(c)!==c))return}finally{if(s)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return u(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?u(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());return{userData:r[0],cardsData:r[1]}})).then((function(e){var t=e.userData,n=e.cardsData;P.textContent=t.name,T.textContent=t.about,M.style.backgroundImage=t.avatar,function(e){e.forEach((function(e){var t=L(e,A,w,o);S.appendChild(t)}))}(n)})).catch((function(e){console.error("Ошибка при получении данных пользователя:",e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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T0R2QzNDLFNBQWtCa0IsR0FDdkJBLEVBQVU3RyxTQUFRLFNBQVVtQixHQUMxQixJQUFNMkYsRUFBTzVGLEVBQVdDLEVBQU9zQixFQUFZUSxFQUFVckcsR0FDckQ4RCxFQUFZcUcsWUFBWUQsRUFDMUIsR0FDRixDQ29DSUUsQ0FBU0gsRUFDWCxJQUNDaEUsT0FBTSxTQUFDNEMsR0FDTjFDLFFBQVEwQyxNQUFNLDRDQUE2Q0EsRUFDN0QsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3lhbmRleF9wcmFrdGlrdW0vLi9zcmMvc2NyaXB0cy9tb2RhbC5qcyIsIndlYnBhY2s6Ly95YW5kZXhfcHJha3Rpa3VtLy4vc3JjL3NjcmlwdHMvYXBpLmpzIiwid2VicGFjazovL3lhbmRleF9wcmFrdGlrdW0vLi9zcmMvc2NyaXB0cy91dGlscy5qcyIsIndlYnBhY2s6Ly95YW5kZXhfcHJha3Rpa3VtLy4vc3JjL3NjcmlwdHMvdmFsaWRhdGlvbi5qcyIsIndlYnBhY2s6Ly95YW5kZXhfcHJha3Rpa3VtLy4vc3JjL3NjcmlwdHMvY2FyZC5qcyIsIndlYnBhY2s6Ly95YW5kZXhfcHJha3Rpa3VtLy4vc3JjL3NjcmlwdHMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHBvcHVwcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wb3B1cCcpO1xyXG5sZXQgZXNjQ2FsbGJhY2s7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gb3BlblBvcHVwKHBvcHVwKSB7XHJcbiAgcG9wdXAuY2xhc3NMaXN0LmFkZCgncG9wdXBfaXMtb3BlbmVkJyk7XHJcbiAgZXNjQ2FsbGJhY2sgPSBmdW5jdGlvbiAoZXZ0KSB7XHJcbiAgICBjbG9zZVBvcGFwRXNjKGV2dCwgcG9wdXApO1xyXG4gIH07XHJcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGVzY0NhbGxiYWNrKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNsb3NlUG9wdXAocG9wdXApIHtcclxuICBwb3B1cC5jbGFzc0xpc3QucmVtb3ZlKCdwb3B1cF9pcy1vcGVuZWQnKTtcclxuICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZXNjQ2FsbGJhY2spO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjbG9zZVBvcGFwRXNjKGV2dCwgcG9wdXApIHtcclxuICBpZiAoZXZ0LmtleSA9PT0gJ0VzY2FwZScpIHtcclxuICAgIGNsb3NlUG9wdXAocG9wdXApO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG9wZW5Qb3B1cEJ5QnV0dG9uKGJ1dHRvbiwgcG9wdXApIHtcclxuICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBvcGVuUG9wdXAocG9wdXApO1xyXG4gIH0pO1xyXG59XHJcblxyXG4vL9C+0YLQutGA0YvRgtC40LUg0L/QvtC/0LDQv9CwINC40LfQvtCx0YDQsNC20LXQvdC40Y9cclxuY29uc3QgcG9wdXBJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF90eXBlX2ltYWdlJyk7XHJcbmNvbnN0IHBvcHVwSW1hZ2VJbWFnZSA9IHBvcHVwSW1hZ2UucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbWFnZScpO1xyXG5jb25zdCBwb3B1cEltYWdlQ2FwdGlvbiA9IHBvcHVwSW1hZ2UucXVlcnlTZWxlY3RvcignLnBvcHVwX19jYXB0aW9uJyk7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gb3BlbkltYWdlUG9wdXAobGluaywgYWx0KSB7XHJcbiAgcG9wdXBJbWFnZUltYWdlLnNyYyA9IGxpbms7XHJcbiAgcG9wdXBJbWFnZUltYWdlLmFsdCA9IGFsdDtcclxuICBwb3B1cEltYWdlQ2FwdGlvbi50ZXh0Q29udGVudCA9IGFsdDtcclxuICBvcGVuUG9wdXAocG9wdXBJbWFnZSk7XHJcbn1cclxuIiwiZXhwb3J0IGxldCBjdXJyZW50VXNlcklkO1xyXG5jb25zdCBiYXNlVXJsID0gJ2h0dHBzOi8vbm9tb3JlcGFydGllcy5jby92MS93ZmYtY29ob3J0LTInO1xyXG5jb25zdCBhdXRob3JpemF0aW9uVG9rZW4gPSAnYzEzMjRlOGMtM2ZmZC00MWJmLThkOGQtZDM5YmM5Mjc3ZjkyJztcclxuXHJcbmNvbnN0IGNvbmZpZyA9IHtcclxuICBoZWFkZXJzOiB7XHJcbiAgICBhdXRob3JpemF0aW9uOiBhdXRob3JpemF0aW9uVG9rZW4sXHJcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gIH0sXHJcbn07XHJcblxyXG5mdW5jdGlvbiBjaGVja1Jlc3BvbnNlKHJlcykge1xyXG4gIGlmICghcmVzLm9rKSB7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXMuc3RhdHVzfWApO1xyXG4gIH1cclxuICByZXR1cm4gcmVzLmpzb24oKTtcclxufVxyXG5cclxuZnVuY3Rpb24gcmVxdWVzdCh1cmwsIG9wdGlvbnMpIHtcclxuICByZXR1cm4gZmV0Y2godXJsLCBvcHRpb25zKS50aGVuKGNoZWNrUmVzcG9uc2UpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYXV0aG9yaXplVXNlcigpIHtcclxuICByZXR1cm4gcmVxdWVzdChgJHtiYXNlVXJsfS91c2Vycy9tZWAsIHsgaGVhZGVyczogY29uZmlnLmhlYWRlcnMgfSkudGhlbihcclxuICAgIChyZXN1bHQpID0+IHtcclxuICAgICAgY3VycmVudFVzZXJJZCA9IHJlc3VsdC5faWQ7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgbmFtZTogcmVzdWx0Lm5hbWUsXHJcbiAgICAgICAgYWJvdXQ6IHJlc3VsdC5hYm91dCxcclxuICAgICAgICBhdmF0YXI6IGB1cmwoJyR7cmVzdWx0LmF2YXRhcn0nKWAsXHJcbiAgICAgICAgX2lkOiBjdXJyZW50VXNlcklkLFxyXG4gICAgICB9O1xyXG4gICAgfVxyXG4gICk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRDYXJkc0Zyb21TZXJ2ZXIoKSB7XHJcbiAgcmV0dXJuIHJlcXVlc3QoYCR7YmFzZVVybH0vY2FyZHNgLCB7IGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzIH0pLnRoZW4oXHJcbiAgICAocmVzdWx0KSA9PiB7XHJcbiAgICAgIGNvbnN0IGluaXRpYWxDYXJkc0Zyb21TZXJ2ZXIgPSBBcnJheS5mcm9tKHJlc3VsdCk7XHJcbiAgICAgIHJldHVybiBpbml0aWFsQ2FyZHNGcm9tU2VydmVyO1xyXG4gICAgfVxyXG4gICk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBwdXNoTXlBdXRob3JpemF0aW9uVG9TZXJ2ZXIobmFtZSwgZGVzY3JpcHRpb24pIHtcclxuICByZXR1cm4gcmVxdWVzdChgJHtiYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzLFxyXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICBuYW1lOiBuYW1lLFxyXG4gICAgICBhYm91dDogZGVzY3JpcHRpb24sXHJcbiAgICB9KSxcclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHB1c2hNeUNhcmRUb1NlcnZlcihjYXJkTmFtZSwgY2FyZExpbmspIHtcclxuICByZXR1cm4gcmVxdWVzdChgJHtiYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnMsXHJcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgIG5hbWU6IGNhcmROYW1lLFxyXG4gICAgICBsaW5rOiBjYXJkTGluayxcclxuICAgIH0pLFxyXG4gIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZGVsZXRlQ2FyZE9uU2VydmVyKGNhcmRJZCkge1xyXG4gIHJldHVybiByZXF1ZXN0KGAke2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcclxuICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgICBoZWFkZXJzOiBjb25maWcuaGVhZGVycyxcclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGxpa2VDYXJkT25TZXJ2ZXIoY2FyZElkKSB7XHJcbiAgcmV0dXJuIHJlcXVlc3QoYCR7YmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xyXG4gICAgbWV0aG9kOiAnUFVUJyxcclxuICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzLFxyXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe30pLFxyXG4gIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZGlzTGlrZUNhcmRPblNlcnZlcihjYXJkSWQpIHtcclxuICByZXR1cm4gcmVxdWVzdChgJHtiYXNlVXJsfS9jYXJkcy9saWtlcy8ke2NhcmRJZH1gLCB7XHJcbiAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnMsXHJcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7fSksXHJcbiAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVVc2VyQXZhdGFyKGF2YXRhclVybCkge1xyXG4gIHJldHVybiByZXF1ZXN0KGAke2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcclxuICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzLFxyXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICBhdmF0YXI6IGF2YXRhclVybCxcclxuICAgIH0pLFxyXG4gIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZmV0Y2hVc2VyRGF0YUFuZENhcmRzKCkge1xyXG4gIHJldHVybiBQcm9taXNlLmFsbChbYXV0aG9yaXplVXNlcigpLCBnZXRDYXJkc0Zyb21TZXJ2ZXIoKV0pLnRoZW4oXHJcbiAgICAoW3VzZXJEYXRhLCBjYXJkc0RhdGFdKSA9PiB7XHJcbiAgICAgIHJldHVybiB7IHVzZXJEYXRhLCBjYXJkc0RhdGEgfTtcclxuICAgIH1cclxuICApO1xyXG59XHJcbiIsImV4cG9ydCBmdW5jdGlvbiByZW5kZXJMb2FkaW5nKGlzTG9hZGluZywgYnV0dG9uKSB7XHJcbiAgICBpZiAoYnV0dG9uICYmIGJ1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoJ3BvcHVwX19idXR0b24nKSkge1xyXG4gICAgICBjb25zdCBidXR0b25UZXh0ID0gaXNMb2FkaW5nID8gJ9Ch0L7RhdGA0LDQvdC10L3QuNC1Li4uJyA6ICfQodC+0YXRgNCw0L3QuNGC0YwnO1xyXG4gICAgICBidXR0b24udGV4dENvbnRlbnQgPSBidXR0b25UZXh0O1xyXG4gICAgfVxyXG4gIH0iLCJleHBvcnQgY29uc3QgdmFsaWRhdGlvbkNvbmZpZyA9IHtcclxuICBmb3JtU2VsZWN0b3I6ICcucG9wdXBfX2Zvcm0nLFxyXG4gIGlucHV0U2VsZWN0b3I6ICcucG9wdXBfX2lucHV0JyxcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogJy5wb3B1cF9fYnV0dG9uJyxcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiAncG9wdXBfX2J1dHRvbl9kaXNhYmxlZCcsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiAncG9wdXBfX2lucHV0X3R5cGVfZXJyb3InLFxyXG4gIGVycm9yQ2xhc3M6ICdwb3B1cF9fZXJyb3JfdmlzaWJsZScsXHJcbiAgZXJyb3JTZWxlY3RvcjogKGlucHV0SWQpID0+IGBbZGF0YS1lcnJvci1mb3I9JyR7aW5wdXRJZH0nXWAsXHJcbn07XHJcblxyXG5jb25zdCBzaG93SW5wdXRFcnJvciA9IChcclxuICBmb3JtRWxlbWVudCxcclxuICBpbnB1dEVsZW1lbnQsXHJcbiAgZXJyb3JNZXNzYWdlLFxyXG4gIHZhbGlkYXRpb25Db25maWdcclxuKSA9PiB7XHJcbiAgY29uc3QgZXJyb3JFbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgIHZhbGlkYXRpb25Db25maWcuZXJyb3JTZWxlY3RvcihpbnB1dEVsZW1lbnQuaWQpXHJcbiAgKTtcclxuICBpZiAoZXJyb3JFbGVtZW50KSB7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh2YWxpZGF0aW9uQ29uZmlnLmlucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh2YWxpZGF0aW9uQ29uZmlnLmVycm9yQ2xhc3MpO1xyXG4gIH1cclxufTtcclxuXHJcbmNvbnN0IGhpZGVJbnB1dEVycm9yID0gKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIHZhbGlkYXRpb25Db25maWcpID0+IHtcclxuICBjb25zdCBlcnJvckVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgdmFsaWRhdGlvbkNvbmZpZy5lcnJvclNlbGVjdG9yKGlucHV0RWxlbWVudC5pZClcclxuICApO1xyXG4gIGlmIChlcnJvckVsZW1lbnQpIHtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHZhbGlkYXRpb25Db25maWcuaW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHZhbGlkYXRpb25Db25maWcuZXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcclxuICB9XHJcbn07XHJcblxyXG5mdW5jdGlvbiBjaGVja0lucHV0VmFsaWRpdHkoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCwgdmFsaWRhdGlvbkNvbmZpZykge1xyXG4gIGlmIChpbnB1dEVsZW1lbnQudmFsaWRpdHkucGF0dGVybk1pc21hdGNoKSB7XHJcbiAgICBpbnB1dEVsZW1lbnQuc2V0Q3VzdG9tVmFsaWRpdHkoaW5wdXRFbGVtZW50LmRhdGFzZXQuZXJyb3JNZXNzYWdlKTtcclxuICB9IGVsc2Uge1xyXG4gICAgaW5wdXRFbGVtZW50LnNldEN1c3RvbVZhbGlkaXR5KCcnKTtcclxuICB9XHJcblxyXG4gIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICBzaG93SW5wdXRFcnJvcihcclxuICAgICAgZm9ybUVsZW1lbnQsXHJcbiAgICAgIGlucHV0RWxlbWVudCxcclxuICAgICAgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlLFxyXG4gICAgICB2YWxpZGF0aW9uQ29uZmlnXHJcbiAgICApO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBoaWRlSW5wdXRFcnJvcihmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCB2YWxpZGF0aW9uQ29uZmlnKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzZXRFdmVudExpc3RlbmVycyhmb3JtRWxlbWVudCwgdmFsaWRhdGlvbkNvbmZpZykge1xyXG4gIGNvbnN0IGlucHV0TGlzdCA9IEFycmF5LmZyb20oXHJcbiAgICBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHZhbGlkYXRpb25Db25maWcuaW5wdXRTZWxlY3RvcilcclxuICApO1xyXG4gIGNvbnN0IGJ1dHRvbkVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgdmFsaWRhdGlvbkNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3RvclxyXG4gICk7XHJcbiAgdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50LCB2YWxpZGF0aW9uQ29uZmlnKTtcclxuICBpbnB1dExpc3QuZm9yRWFjaChmdW5jdGlvbiAoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGNoZWNrSW5wdXRWYWxpZGl0eShmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCB2YWxpZGF0aW9uQ29uZmlnKTtcclxuICAgICAgdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50LCB2YWxpZGF0aW9uQ29uZmlnKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZW5hYmxlVmFsaWRhdGlvbih2YWxpZGF0aW9uQ29uZmlnKSB7XHJcbiAgY29uc3QgZm9ybUxpc3QgPSBBcnJheS5mcm9tKFxyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh2YWxpZGF0aW9uQ29uZmlnLmZvcm1TZWxlY3RvcilcclxuICApO1xyXG4gIGZvcm1MaXN0LmZvckVhY2goZnVuY3Rpb24gKGZvcm1FbGVtZW50KSB7XHJcbiAgICBmb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoZm9ybUVsZW1lbnQsIHZhbGlkYXRpb25Db25maWcpO1xyXG4gIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY2xlYXJWYWxpZGF0aW9uKGZvcm1FbGVtZW50LCB2YWxpZGF0aW9uQ29uZmlnKSB7XHJcbiAgY29uc3QgaW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcclxuICAgIGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodmFsaWRhdGlvbkNvbmZpZy5pbnB1dFNlbGVjdG9yKVxyXG4gICk7XHJcblxyXG4gIGlucHV0TGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChpbnB1dEVsZW1lbnQpIHtcclxuICAgIGhpZGVJbnB1dEVycm9yKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIHZhbGlkYXRpb25Db25maWcpO1xyXG4gIH0pO1xyXG5cclxuICBjb25zdCBidXR0b25FbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgIHZhbGlkYXRpb25Db25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3JcclxuICApO1xyXG4gIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh2YWxpZGF0aW9uQ29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gIGJ1dHRvbkVsZW1lbnQuc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsIHRydWUpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSB7XHJcbiAgcmV0dXJuIGlucHV0TGlzdC5zb21lKGZ1bmN0aW9uIChpbnB1dEVsZW1lbnQpIHtcclxuICAgIHJldHVybiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkO1xyXG4gIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiB0b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQsIHZhbGlkYXRpb25Db25maWcpIHtcclxuICBpZiAoaGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkpIHtcclxuICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh2YWxpZGF0aW9uQ29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgYnV0dG9uRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgdHJ1ZSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh2YWxpZGF0aW9uQ29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgYnV0dG9uRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IGNsb3NlUG9wdXAsIG9wZW5JbWFnZVBvcHVwIH0gZnJvbSAnLi9tb2RhbC5qcyc7XHJcbmltcG9ydCB7XHJcbiAgcHVzaE15Q2FyZFRvU2VydmVyLFxyXG4gIGN1cnJlbnRVc2VySWQsXHJcbiAgZGVsZXRlQ2FyZE9uU2VydmVyLFxyXG4gIGxpa2VDYXJkT25TZXJ2ZXIsXHJcbiAgZGlzTGlrZUNhcmRPblNlcnZlcixcclxufSBmcm9tICcuL2FwaS5qcyc7XHJcbmltcG9ydCB7IHJlbmRlckxvYWRpbmcgfSBmcm9tICcuL3V0aWxzLmpzJztcclxuaW1wb3J0IHtcclxuICB2YWxpZGF0aW9uQ29uZmlnLFxyXG4gIHNldEV2ZW50TGlzdGVuZXJzLFxyXG4gIGNsZWFyVmFsaWRhdGlvbixcclxufSBmcm9tICcuL3ZhbGlkYXRpb24uanMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNhcmRzT25QYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBsYWNlc19fbGlzdCcpO1xyXG5leHBvcnQgY29uc3QgcG9wdXBBZGROZXdDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX3R5cGVfbmV3LWNhcmQnKTtcclxuXHJcbmNvbnN0IGNhcmRUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjYXJkLXRlbXBsYXRlJykuY29udGVudDtcclxuY29uc3QgbmV3UGxhY2UgPSBkb2N1bWVudC5mb3Jtcy5uZXdQbGFjZTtcclxuY29uc3QgcGxhY2VOYW1lID0gbmV3UGxhY2UucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbnB1dF90eXBlX2NhcmQtbmFtZScpO1xyXG5jb25zdCBwbGFjZUxpbmsgPSBuZXdQbGFjZS5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X3R5cGVfdXJsJyk7XHJcblxyXG4vLyDQpNGD0L3QutGG0LjRjyDRgdC+0LfQtNCw0L3QuNGPINC60LDRgNGC0L7Rh9C60LhcclxuZnVuY3Rpb24gY3JlYXRlQ2FyZChwbGFjZSwgZGVsZXRlRnVuY3Rpb24sIGxpa2VGdW5jdGlvbiwgY3VycmVudFVzZXJJZCkge1xyXG4gIGNvbnN0IGNhcmRJdGVtID0gY2FyZFRlbXBsYXRlLnF1ZXJ5U2VsZWN0b3IoJy5jYXJkJykuY2xvbmVOb2RlKHRydWUpO1xyXG4gIGNvbnN0IGRlbGV0ZUJ1dHRvbiA9IGNhcmRJdGVtLnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19kZWxldGUtYnV0dG9uJyk7XHJcbiAgY29uc3QgY2FyZEltYWdlID0gY2FyZEl0ZW0ucXVlcnlTZWxlY3RvcignLmNhcmRfX2ltYWdlJyk7XHJcbiAgY29uc3QgY2FyZFRpdGxlID0gY2FyZEl0ZW0ucXVlcnlTZWxlY3RvcignLmNhcmRfX3RpdGxlJyk7XHJcbiAgY29uc3QgY2FyZExpa2VCdXR0b24gPSBjYXJkSXRlbS5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fbGlrZS1idXR0b24nKTtcclxuICBjb25zdCBudW1iZXJPZkxpa2VzID0gY2FyZEl0ZW0ucXVlcnlTZWxlY3RvcignLmxpa2VzLW51bWJlcicpO1xyXG5cclxuICBjb25zdCBjYXJkSWQgPSBwbGFjZS5faWQgfHwgJyc7XHJcbiAgY2FyZEl0ZW0uZGF0YXNldC5jYXJkSWQgPSBjYXJkSWQ7XHJcblxyXG4gIGlmIChwbGFjZS5vd25lciAmJiBwbGFjZS5vd25lci5faWQgPT09IGN1cnJlbnRVc2VySWQpIHtcclxuICAgIGRlbGV0ZUJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuICB9IGVsc2Uge1xyXG4gICAgZGVsZXRlQnV0dG9uLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgfVxyXG4gIGlmIChwbGFjZS5saWtlcyAmJiBwbGFjZS5saWtlcy5zb21lKCh1c2VyKSA9PiB1c2VyLl9pZCA9PT0gY3VycmVudFVzZXJJZCkpIHtcclxuICAgIGNhcmRMaWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2NhcmRfX2xpa2UtYnV0dG9uX2lzLWFjdGl2ZScpO1xyXG4gIH1cclxuICBjYXJkSW1hZ2Uuc3JjID0gcGxhY2UubGluaztcclxuICBjYXJkSW1hZ2UuYWx0ID0gJ9Ck0L7RgtC+0LPRgNCw0YTQuNGPINGBINC80LXRgdGC0LAgLSAnICsgcGxhY2UubmFtZTtcclxuICBjYXJkVGl0bGUudGV4dENvbnRlbnQgPSBwbGFjZS5uYW1lO1xyXG4gIG51bWJlck9mTGlrZXMudGV4dENvbnRlbnQgPSBwbGFjZS5saWtlcy5sZW5ndGg7XHJcbiAgZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZGVsZXRlRnVuY3Rpb24pO1xyXG4gIGNhcmRMaWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgbGlrZUZ1bmN0aW9uKGNhcmRJZCk7XHJcbiAgfSk7XHJcbiAgY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgb3BlbkltYWdlUG9wdXAocGxhY2UubGluaywgcGxhY2UubmFtZSk7XHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiBjYXJkSXRlbTtcclxufVxyXG5cclxuLy8g0KTRg9C90LrRhtC40Y8g0YPQtNCw0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4XHJcbmZ1bmN0aW9uIGRlbGV0ZUNhcmQoZXZ0KSB7XHJcbiAgY29uc3QgY2FyZFRvUmVtb3ZlID0gZXZ0LnRhcmdldC5jbG9zZXN0KCcuY2FyZCcpO1xyXG4gIGNvbnN0IGNhcmRJZCA9IGNhcmRUb1JlbW92ZS5kYXRhc2V0LmNhcmRJZDtcclxuICBkZWxldGVDYXJkT25TZXJ2ZXIoY2FyZElkKVxyXG4gICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICBjYXJkVG9SZW1vdmUucmVtb3ZlKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsDogJHtlcnJ9YCk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLy8g0KTRg9C90LrRhtC40Y8g0LvQsNC50LrQsC/QtNC40LfQu9Cw0LnQutCwINC60LDRgNGC0L7Rh9C60LhcclxuZXhwb3J0IGZ1bmN0aW9uIGxpa2VDYXJkKGNhcmRJZCkge1xyXG4gIGNvbnN0IGN1cnJlbnRDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLmNhcmRbZGF0YS1jYXJkLWlkPScke2NhcmRJZH0nXWApO1xyXG4gIGNvbnN0IGNhcmRUb0xpa2UgPSBjdXJyZW50Q2FyZC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fbGlrZS1idXR0b24nKTtcclxuICBjb25zdCBpc0xpa2VkID0gY2FyZFRvTGlrZS5jbGFzc0xpc3QuY29udGFpbnMoJ2NhcmRfX2xpa2UtYnV0dG9uX2lzLWFjdGl2ZScpO1xyXG4gIGNvbnN0IGxpa2VBY3Rpb24gPSBpc0xpa2VkID8gZGlzTGlrZUNhcmRPblNlcnZlciA6IGxpa2VDYXJkT25TZXJ2ZXI7XHJcbiAgbGlrZUFjdGlvbihjYXJkSWQpXHJcbiAgICAudGhlbigodXBkYXRlZENhcmQpID0+IHtcclxuICAgICAgY2FyZFRvTGlrZS5jbGFzc0xpc3QudG9nZ2xlKCdjYXJkX19saWtlLWJ1dHRvbl9pcy1hY3RpdmUnKTtcclxuICAgICAgY29uc3QgbGlrZXNOdW1iZXJFbGVtZW50ID0gY3VycmVudENhcmQucXVlcnlTZWxlY3RvcignLmxpa2VzLW51bWJlcicpO1xyXG4gICAgICBsaWtlc051bWJlckVsZW1lbnQudGV4dENvbnRlbnQgPSB1cGRhdGVkQ2FyZC5saWtlcy5sZW5ndGg7XHJcbiAgICAgIGN1cnJlbnRDYXJkLmRhdGFzZXQuaXNMaWtlZCA9IGlzTGlrZWQgPyAnZmFsc2UnIDogJ3RydWUnO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LAg0L/RgNC4INC+0LHRgNCw0LHQvtGC0LrQtSDQu9Cw0LnQutCwL9C00LjQt9C70LDQudC60LA6ICR7ZXJyfWApO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8vINCS0YvQstC10YHRgtC4INC60LDRgNGC0L7Rh9C60Lgg0L3QsCDRgdGC0YDQsNC90LjRhtGDXHJcbmV4cG9ydCBmdW5jdGlvbiBhZGRDYXJkcyhjYXJkc0RhdGEpIHtcclxuICBjYXJkc0RhdGEuZm9yRWFjaChmdW5jdGlvbiAocGxhY2UpIHtcclxuICAgIGNvbnN0IGNhcmQgPSBjcmVhdGVDYXJkKHBsYWNlLCBkZWxldGVDYXJkLCBsaWtlQ2FyZCwgY3VycmVudFVzZXJJZCk7XHJcbiAgICBjYXJkc09uUGFnZS5hcHBlbmRDaGlsZChjYXJkKTtcclxuICB9KTtcclxufVxyXG5cclxuLy8g0JTQvtCx0LDQstC70LXQvdC40LUg0L3QvtCy0L7QuSDQutCw0YDRgtC+0YfQutC4INGH0LXRgNC10Lcg0L/QvtC/0LDQv1xyXG5leHBvcnQgZnVuY3Rpb24gYWRkQ2FyZFRvQ2FyZHNBcnJheShldnQpIHtcclxuICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICBjb25zdCBzYXZlQnV0dG9uID0gZXZ0LnN1Ym1pdHRlcjtcclxuICByZW5kZXJMb2FkaW5nKHRydWUsIHNhdmVCdXR0b24pO1xyXG4gIHB1c2hNeUNhcmRUb1NlcnZlcihwbGFjZU5hbWUudmFsdWUsIHBsYWNlTGluay52YWx1ZSlcclxuICAgIC50aGVuKChhZGRlZENhcmQpID0+IHtcclxuICAgICAgY29uc3QgbmV3UGxhY2VDYXJkID0gY3JlYXRlQ2FyZChcclxuICAgICAgICBhZGRlZENhcmQsXHJcbiAgICAgICAgZGVsZXRlQ2FyZCxcclxuICAgICAgICBsaWtlQ2FyZCxcclxuICAgICAgICBjdXJyZW50VXNlcklkXHJcbiAgICAgICk7XHJcbiAgICAgIGNhcmRzT25QYWdlLmluc2VydEJlZm9yZShuZXdQbGFjZUNhcmQsIGNhcmRzT25QYWdlLmZpcnN0Q2hpbGQpO1xyXG4gICAgICBuZXdQbGFjZS5yZXNldCgpO1xyXG4gICAgICBjbGVhclZhbGlkYXRpb24obmV3UGxhY2UsIHZhbGlkYXRpb25Db25maWcpO1xyXG4gICAgICAgY2xvc2VQb3B1cChwb3B1cEFkZE5ld0NhcmQpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgY29uc29sZS5lcnJvcign0J7RiNC40LHQutCwINC/0YDQuCDQtNC+0LHQsNCy0LvQtdC90LjQuCDQutCw0YDRgtC+0YfQutC4OicsIGVycm9yKTtcclxuICAgIH0pXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIHJlbmRlckxvYWRpbmcoZmFsc2UsIHNhdmVCdXR0b24pO1xyXG4gICAgfSk7XHJcbn1cclxuIiwiaW1wb3J0ICcuLi9wYWdlcy9pbmRleC5jc3MnO1xyXG5pbXBvcnQgeyBhZGRDYXJkcywgYWRkQ2FyZFRvQ2FyZHNBcnJheSwgcG9wdXBBZGROZXdDYXJkIH0gZnJvbSAnLi9jYXJkLmpzJztcclxuaW1wb3J0IHsgb3BlblBvcHVwLCBjbG9zZVBvcHVwLCBvcGVuUG9wdXBCeUJ1dHRvbiwgcG9wdXBzIH0gZnJvbSAnLi9tb2RhbC5qcyc7XHJcbmltcG9ydCB7XHJcbiAgZW5hYmxlVmFsaWRhdGlvbixcclxuICB2YWxpZGF0aW9uQ29uZmlnLFxyXG4gIHNldEV2ZW50TGlzdGVuZXJzLFxyXG4gIGNsZWFyVmFsaWRhdGlvbixcclxufSBmcm9tICcuL3ZhbGlkYXRpb24uanMnO1xyXG5pbXBvcnQge1xyXG4gIHB1c2hNeUF1dGhvcml6YXRpb25Ub1NlcnZlcixcclxuICB1cGRhdGVVc2VyQXZhdGFyLFxyXG4gIGZldGNoVXNlckRhdGFBbmRDYXJkcyxcclxufSBmcm9tICcuL2FwaS5qcyc7XHJcbmltcG9ydCB7IHJlbmRlckxvYWRpbmcgfSBmcm9tICcuL3V0aWxzLmpzJztcclxuXHJcbmNvbnN0IHBvcHVwUHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF90eXBlX2VkaXQnKTtcclxuY29uc3QgZWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19lZGl0LWJ1dHRvbicpO1xyXG5jb25zdCBhZGRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWRkLWJ1dHRvbicpO1xyXG5cclxuLy8g0JHQu9C+0Log0L7RgtCy0LXRh9Cw0Y7RidC40Lkg0LfQsCDRgdC+0YXRgNCw0L3QtdC90LjQtSDQtNCw0L3QvdGL0YUg0LIgcG9wdXAgJ9GA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40LUg0L/RgNC+0YTQuNC70Y8nXHJcbmNvbnN0IHByb2ZpbGVOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX3RpdGxlJyk7XHJcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19kZXNjcmlwdGlvbicpO1xyXG5jb25zdCBwcm9maWxlRm9ybSA9IGRvY3VtZW50LmZvcm1zLmVkaXRQcm9maWxlO1xyXG5jb25zdCBwcm9maWxlRm9ybU5hbWUgPSBwcm9maWxlRm9ybS5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X3R5cGVfbmFtZScpO1xyXG5jb25zdCBwcm9maWxlRm9ybURlc2NyaXB0aW9uID0gcHJvZmlsZUZvcm0ucXVlcnlTZWxlY3RvcihcclxuICAnLnBvcHVwX19pbnB1dF90eXBlX2Rlc2NyaXB0aW9uJ1xyXG4pO1xyXG5cclxuZnVuY3Rpb24gc2V0UHJvZmlsZUZvcm1WYWx1ZXMoKSB7XHJcbiAgcHJvZmlsZUZvcm1OYW1lLnZhbHVlID0gcHJvZmlsZU5hbWUudGV4dENvbnRlbnQ7XHJcbiAgcHJvZmlsZUZvcm1EZXNjcmlwdGlvbi52YWx1ZSA9IHByb2ZpbGVEZXNjcmlwdGlvbi50ZXh0Q29udGVudDtcclxuICBjb25zdCBpbnB1dEV2ZW50ID0gbmV3IEV2ZW50KCdpbnB1dCcsIHsgYnViYmxlczogdHJ1ZSB9KTtcclxuICBwcm9maWxlRm9ybU5hbWUuZGlzcGF0Y2hFdmVudChpbnB1dEV2ZW50KTtcclxuICBwcm9maWxlRm9ybURlc2NyaXB0aW9uLmRpc3BhdGNoRXZlbnQoaW5wdXRFdmVudCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG9wZW5Qcm9maWxlUG9wdXBCeUJ1dHRvbigpIHtcclxuICBzZXRQcm9maWxlRm9ybVZhbHVlcygpO1xyXG4gIG9wZW5Qb3B1cChwb3B1cFByb2ZpbGUpO1xyXG59XHJcblxyXG5lZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgb3BlblByb2ZpbGVQb3B1cEJ5QnV0dG9uKTtcclxuXHJcbi8vINCY0LfQvNC10L3QtdC90LjQtSDQv9GA0L7RhNC40LvRj1xyXG5mdW5jdGlvbiBjaGFuZ2VQcm9maWxlKGV2dCkge1xyXG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIGNvbnN0IHNhdmVCdXR0b24gPSBldnQuc3VibWl0dGVyO1xyXG4gIHJlbmRlckxvYWRpbmcodHJ1ZSwgc2F2ZUJ1dHRvbik7XHJcblxyXG4gIHB1c2hNeUF1dGhvcml6YXRpb25Ub1NlcnZlcihcclxuICAgIHByb2ZpbGVGb3JtTmFtZS52YWx1ZSxcclxuICAgIHByb2ZpbGVGb3JtRGVzY3JpcHRpb24udmFsdWVcclxuICApXHJcbiAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgIHByb2ZpbGVOYW1lLnRleHRDb250ZW50ID0gcHJvZmlsZUZvcm1OYW1lLnZhbHVlO1xyXG4gICAgICBwcm9maWxlRGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBwcm9maWxlRm9ybURlc2NyaXB0aW9uLnZhbHVlO1xyXG4gICAgICBjbG9zZVBvcHVwKHBvcHVwUHJvZmlsZSk7XHJcbiAgICAgIHByb2ZpbGVGb3JtLnJlc2V0KCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsDogJHtlcnJ9YCk7XHJcbiAgICB9KVxyXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICByZW5kZXJMb2FkaW5nKGZhbHNlLCBzYXZlQnV0dG9uKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5zZXRQcm9maWxlRm9ybVZhbHVlcygpO1xyXG5cclxuLy/QmNC30LzQtdC90LXQvdC40LUg0LDQstCw0YLQsNGA0LAg0YfQtdGA0LXQtyDQv9C+0L/QsNC/XHJcbmNvbnN0IHByb2ZpbGVJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19pbWFnZScpO1xyXG5jb25zdCBjaGFuZ2VBdmF0YXJCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9faW1hZ2UnKTtcclxuY29uc3QgcG9wdXBDaGFuZ2VBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfdHlwZV9uZXctYXZhdGFyJyk7XHJcbmNvbnN0IGF2YXRhckZvcm0gPSBkb2N1bWVudC5mb3Jtcy5jaGFuZ2VBdmF0YXI7XHJcbmNvbnN0IGNoYW5nZUF2YXRhckZvcm0gPSBhdmF0YXJGb3JtLnF1ZXJ5U2VsZWN0b3IoXHJcbiAgJy5wb3B1cF9faW5wdXRfdHlwZV9hdmF0YXJfdXJsJ1xyXG4pO1xyXG5cclxuY2hhbmdlQXZhdGFyQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gIG9wZW5Qb3B1cChwb3B1cENoYW5nZUF2YXRhcik7XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gY2hhbmdlUHJvZmlsZUF2YXRhcihldnQpIHtcclxuICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICBjb25zdCBzYXZlQnV0dG9uID0gZXZ0LnN1Ym1pdHRlcjtcclxuICBjb25zdCBhdmF0YXJVcmwgPSBjaGFuZ2VBdmF0YXJGb3JtLnZhbHVlO1xyXG4gIHJlbmRlckxvYWRpbmcodHJ1ZSwgc2F2ZUJ1dHRvbik7XHJcblxyXG4gIHVwZGF0ZVVzZXJBdmF0YXIoYXZhdGFyVXJsKVxyXG4gICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICBwcm9maWxlSW1hZ2Uuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gYHVybCgnJHthdmF0YXJVcmx9JylgO1xyXG4gICAgICBjbG9zZVBvcHVwKHBvcHVwQ2hhbmdlQXZhdGFyKTtcclxuICAgICAgYXZhdGFyRm9ybS5yZXNldCgpO1xyXG4gICAgICBjbGVhclZhbGlkYXRpb24oYXZhdGFyRm9ybSwgdmFsaWRhdGlvbkNvbmZpZyk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCfQntGI0LjQsdC60LAg0L/RgNC4INGB0L7RhdGA0LDQvdC10L3QuNC4INCw0LLQsNGC0LDRgNCwOicsIGVycm9yKTtcclxuICAgIH0pXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIHJlbmRlckxvYWRpbmcoZmFsc2UsIHNhdmVCdXR0b24pO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8v0KHQu9GD0YjQsNGC0LXQu9C4INC90LAg0LfQsNC60YDRi9GC0LjQtSDRhNC+0YDQvCArINGB0LvRg9GI0LDRgtC10LvRjCDQv9C+0YHRgtCw0L3QvtCy0LrQuCDQu9Cw0LnQutCwXHJcbnByb2ZpbGVGb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGNoYW5nZVByb2ZpbGUpO1xyXG5uZXdQbGFjZS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBhZGRDYXJkVG9DYXJkc0FycmF5KTtcclxuYXZhdGFyRm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBjaGFuZ2VQcm9maWxlQXZhdGFyKTtcclxuXHJcbnBvcHVwcy5mb3JFYWNoKGZ1bmN0aW9uIChwb3B1cCkge1xyXG4gIHBvcHVwLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgaWYgKFxyXG4gICAgICBldnQudGFyZ2V0ID09PSBldnQuY3VycmVudFRhcmdldCB8fFxyXG4gICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXBfX2Nsb3NlJylcclxuICAgICkge1xyXG4gICAgICBjbG9zZVBvcHVwKHBvcHVwKTtcclxuICAgIH1cclxuICB9KTtcclxufSk7XHJcblxyXG4vL9CS0YvQt9C+0LLRiyDRhNGD0L3QutGG0LjQuSDQvtGC0LrRgNGL0YLQuNGPINC4INC30LDQutGA0YvRgtC40Y8g0LzQvtC00LDQu9GM0L3Ri9GFINC+0LrQvtC9XHJcbm9wZW5Qb3B1cEJ5QnV0dG9uKGFkZEJ1dHRvbiwgcG9wdXBBZGROZXdDYXJkKTtcclxuXHJcbmVuYWJsZVZhbGlkYXRpb24odmFsaWRhdGlvbkNvbmZpZyk7XHJcblxyXG5mZXRjaFVzZXJEYXRhQW5kQ2FyZHMoKVxyXG4gIC50aGVuKCh7IHVzZXJEYXRhLCBjYXJkc0RhdGEgfSkgPT4ge1xyXG4gICAgcHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSB1c2VyRGF0YS5uYW1lO1xyXG4gICAgcHJvZmlsZURlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gdXNlckRhdGEuYWJvdXQ7XHJcbiAgICBwcm9maWxlSW1hZ2Uuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gdXNlckRhdGEuYXZhdGFyO1xyXG5cclxuICAgIGFkZENhcmRzKGNhcmRzRGF0YSk7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICBjb25zb2xlLmVycm9yKCfQntGI0LjQsdC60LAg0L/RgNC4INC/0L7Qu9GD0YfQtdC90LjQuCDQtNCw0L3QvdGL0YUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPOicsIGVycm9yKTtcclxuICB9KTtcclxuIl0sIm5hbWVzIjpbImVzY0NhbGxiYWNrIiwicG9wdXBzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwib3BlblBvcHVwIiwicG9wdXAiLCJjbGFzc0xpc3QiLCJhZGQiLCJldnQiLCJrZXkiLCJjbG9zZVBvcHVwIiwiY2xvc2VQb3BhcEVzYyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY3VycmVudFVzZXJJZCIsInBvcHVwSW1hZ2UiLCJxdWVyeVNlbGVjdG9yIiwicG9wdXBJbWFnZUltYWdlIiwicG9wdXBJbWFnZUNhcHRpb24iLCJiYXNlVXJsIiwiY29uZmlnIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJjaGVja1Jlc3BvbnNlIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsImNvbmNhdCIsInN0YXR1cyIsInJlcXVlc3QiLCJ1cmwiLCJvcHRpb25zIiwiZmV0Y2giLCJ0aGVuIiwibGlrZUNhcmRPblNlcnZlciIsImNhcmRJZCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZGlzTGlrZUNhcmRPblNlcnZlciIsInJlbmRlckxvYWRpbmciLCJpc0xvYWRpbmciLCJidXR0b24iLCJjb250YWlucyIsImJ1dHRvblRleHQiLCJ0ZXh0Q29udGVudCIsInZhbGlkYXRpb25Db25maWciLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImVycm9yU2VsZWN0b3IiLCJpbnB1dElkIiwiaGlkZUlucHV0RXJyb3IiLCJmb3JtRWxlbWVudCIsImlucHV0RWxlbWVudCIsImVycm9yRWxlbWVudCIsImlkIiwiY2xlYXJWYWxpZGF0aW9uIiwiQXJyYXkiLCJmcm9tIiwiZm9yRWFjaCIsImJ1dHRvbkVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJ0b2dnbGVCdXR0b25TdGF0ZSIsImlucHV0TGlzdCIsInNvbWUiLCJ2YWxpZGl0eSIsInZhbGlkIiwiaGFzSW52YWxpZElucHV0IiwicmVtb3ZlQXR0cmlidXRlIiwiY2FyZHNPblBhZ2UiLCJwb3B1cEFkZE5ld0NhcmQiLCJjYXJkVGVtcGxhdGUiLCJjb250ZW50IiwibmV3UGxhY2UiLCJmb3JtcyIsInBsYWNlTmFtZSIsInBsYWNlTGluayIsImNyZWF0ZUNhcmQiLCJwbGFjZSIsImRlbGV0ZUZ1bmN0aW9uIiwibGlrZUZ1bmN0aW9uIiwiY2FyZEl0ZW0iLCJjbG9uZU5vZGUiLCJkZWxldGVCdXR0b24iLCJjYXJkSW1hZ2UiLCJjYXJkVGl0bGUiLCJjYXJkTGlrZUJ1dHRvbiIsIm51bWJlck9mTGlrZXMiLCJfaWQiLCJkYXRhc2V0Iiwib3duZXIiLCJzdHlsZSIsImRpc3BsYXkiLCJsaWtlcyIsInVzZXIiLCJzcmMiLCJsaW5rIiwiYWx0IiwibmFtZSIsImxlbmd0aCIsImRlbGV0ZUNhcmQiLCJjYXJkVG9SZW1vdmUiLCJ0YXJnZXQiLCJjbG9zZXN0IiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwibGlrZUNhcmQiLCJjdXJyZW50Q2FyZCIsImNhcmRUb0xpa2UiLCJpc0xpa2VkIiwidXBkYXRlZENhcmQiLCJ0b2dnbGUiLCJwb3B1cFByb2ZpbGUiLCJlZGl0QnV0dG9uIiwiYWRkQnV0dG9uIiwicHJvZmlsZU5hbWUiLCJwcm9maWxlRGVzY3JpcHRpb24iLCJwcm9maWxlRm9ybSIsImVkaXRQcm9maWxlIiwicHJvZmlsZUZvcm1OYW1lIiwicHJvZmlsZUZvcm1EZXNjcmlwdGlvbiIsInNldFByb2ZpbGVGb3JtVmFsdWVzIiwidmFsdWUiLCJpbnB1dEV2ZW50IiwiRXZlbnQiLCJidWJibGVzIiwiZGlzcGF0Y2hFdmVudCIsInByb2ZpbGVJbWFnZSIsImNoYW5nZUF2YXRhckJ1dHRvbiIsInBvcHVwQ2hhbmdlQXZhdGFyIiwiYXZhdGFyRm9ybSIsImNoYW5nZUF2YXRhciIsImNoYW5nZUF2YXRhckZvcm0iLCJwcmV2ZW50RGVmYXVsdCIsImRlc2NyaXB0aW9uIiwic2F2ZUJ1dHRvbiIsInN1Ym1pdHRlciIsImFib3V0IiwicmVzZXQiLCJmaW5hbGx5IiwiY2FyZE5hbWUiLCJjYXJkTGluayIsImFkZGVkQ2FyZCIsIm5ld1BsYWNlQ2FyZCIsImluc2VydEJlZm9yZSIsImZpcnN0Q2hpbGQiLCJlcnJvciIsImF2YXRhclVybCIsImF2YXRhciIsInVwZGF0ZVVzZXJBdmF0YXIiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJjdXJyZW50VGFyZ2V0IiwiZXZlbnQiLCJwYXR0ZXJuTWlzbWF0Y2giLCJzZXRDdXN0b21WYWxpZGl0eSIsImVycm9yTWVzc2FnZSIsInNob3dJbnB1dEVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJjaGVja0lucHV0VmFsaWRpdHkiLCJzZXRFdmVudExpc3RlbmVycyIsImVuYWJsZVZhbGlkYXRpb24iLCJhbGwiLCJyZXN1bHQiLCJfcmVmIiwiX3JlZjIiLCJ1c2VyRGF0YSIsImNhcmRzRGF0YSIsImNhcmQiLCJhcHBlbmRDaGlsZCIsImFkZENhcmRzIl0sInNvdXJjZVJvb3QiOiIifQ==